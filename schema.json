{
  "$defs": {
    "About": {
      "additionalProperties": false,
      "properties": {
        "homepage": {
          "anyOf": [
            {
              "format": "uri",
              "minLength": 1,
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Url of the homepage of the package.",
          "title": "Homepage"
        },
        "repository": {
          "anyOf": [
            {
              "format": "uri",
              "minLength": 1,
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Url that points to where the source code is hosted e.g. (github.com)",
          "title": "Repository"
        },
        "documentation": {
          "anyOf": [
            {
              "format": "uri",
              "minLength": 1,
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Url that points to where the documentation is hosted.",
          "title": "Documentation"
        },
        "license": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An license in SPDX format.",
          "title": "License"
        },
        "license_file": {
          "anyOf": [
            {
              "pattern": "^[^\\\\]+$",
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "pattern": "^[^\\\\]+$",
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Paths to the license files of this package.",
          "title": "License File"
        },
        "license_url": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A url that points to the license file.",
          "title": "License Url"
        },
        "summary": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A short description of the package.",
          "title": "Summary"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/DescriptionFile"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Extented description of the package or a file (usually a README).",
          "title": "Description"
        },
        "prelink_message": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Prelink Message"
        }
      },
      "title": "About",
      "type": "object"
    },
    "Build": {
      "additionalProperties": false,
      "properties": {
        "number": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "pattern": "\\$\\{\\{.*\\}\\}",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": 0,
          "description": "Build number to version current build in addition to package version",
          "title": "Number"
        },
        "string": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Build string to identify build variant (if not explicitly set, computed automatically from used build variant)",
          "title": "String"
        },
        "skip": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "List of conditions under which to skip the build of the package.",
          "title": "Skip"
        },
        "script": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Build script to be used. If not given, tries to find 'build.sh' on Unix or 'bld.bat' on Windows inside the recipe folder.",
          "title": "Script"
        },
        "noarch": {
          "anyOf": [
            {
              "enum": [
                "generic",
                "python"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Can be either 'generic' or 'python'. A noarch 'python' package compiles .pyc files upon installation.",
          "title": "Noarch"
        },
        "entry_points": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Only valid if `noarch: python` - list of all entry points of the package. e.g. `bsdiff4 = bsdiff4.cli:main_bsdiff4`",
          "title": "Entry Points"
        },
        "run_exports": {
          "anyOf": [
            {
              "$ref": "#/$defs/RunExports"
            },
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Additional `run` dependencies added to a package that is build against this package.",
          "title": "Run Exports"
        },
        "ignore_run_exports": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Ignore specific `run` dependencies that are added by dependencies in our `host` requirements section that have`run_exports`.",
          "title": "Ignore Run Exports"
        },
        "ignore_run_exports_from": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Ignore `run_exports` from the specified dependencies in our `host` section.`",
          "title": "Ignore Run Exports From"
        },
        "track_features": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "deprecated, but still used to downweigh packages",
          "title": "Track Features"
        },
        "include_recipe": {
          "default": true,
          "description": "Whether or not to include the rendered recipe in the final package.",
          "title": "Include Recipe",
          "type": "boolean"
        },
        "pre-link": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Script to execute when installing - before linking. Highly discouraged!",
          "title": "Pre-Link"
        },
        "post-link": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Script to execute when installing - after linking.",
          "title": "Post-Link"
        },
        "pre-unlink": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Script to execute when removing - before unlinking.",
          "title": "Pre-Unlink"
        },
        "no_link": {
          "anyOf": [
            {
              "pattern": "^[^\\\\]+$",
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "pattern": "^[^\\\\]+$",
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A list of files that are included in the package but should not be installed when installing the package.",
          "title": "No Link"
        },
        "binary_relocation": {
          "anyOf": [
            {
              "const": false
            },
            {
              "pattern": "^[^\\\\]+$",
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "pattern": "^[^\\\\]+$",
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "default": [],
          "description": "A list of files that should be excluded from binary relocation or False to ignore all binary files.",
          "title": "Binary Relocation"
        },
        "has_prefix_files": {
          "anyOf": [
            {
              "pattern": "^[^\\\\]+$",
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "pattern": "^[^\\\\]+$",
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "default": [],
          "description": "A list of files to force being detected as A TEXT file for prefix replacement.",
          "title": "Has Prefix Files"
        },
        "binary_has_prefix_files": {
          "anyOf": [
            {
              "pattern": "^[^\\\\]+$",
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "pattern": "^[^\\\\]+$",
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "default": [],
          "description": "A list of files to force being detected as A BINARY file for prefix replacement.",
          "title": "Binary Has Prefix Files"
        },
        "ignore_prefix_files": {
          "anyOf": [
            {
              "const": true
            },
            {
              "pattern": "^[^\\\\]+$",
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "pattern": "^[^\\\\]+$",
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "default": [],
          "description": "A list of files that are not considered for prefix replacement, or True to ignore all files.",
          "title": "Ignore Prefix Files"
        },
        "detect_binary_files_with_prefix": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Wether to detect binary files with prefix or not. Defaults to True on Unix and False on Windows.",
          "title": "Detect Binary Files With Prefix"
        },
        "skip_compile_pyc": {
          "anyOf": [
            {
              "pattern": "^[^\\\\]+$",
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "pattern": "^[^\\\\]+$",
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A list of python files that should not be compiled to .pyc files at install time.",
          "title": "Skip Compile Pyc"
        },
        "rpaths": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "default": [
            "lib/"
          ],
          "description": "A list of rpaths (Linux only).",
          "title": "Rpaths"
        },
        "script_env": {
          "anyOf": [
            {
              "$ref": "#/$defs/ScriptEnv"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Environment variables to either pass through to the script environment or set."
        },
        "always_include_files": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "default": [],
          "description": "Files to be included even if they are present in the PREFIX before building.",
          "title": "Always Include Files"
        },
        "osx_is_app": {
          "default": false,
          "title": "Osx Is App",
          "type": "boolean"
        },
        "disable_pip": {
          "default": false,
          "title": "Disable Pip",
          "type": "boolean"
        },
        "preserve_egg_dir": {
          "default": false,
          "title": "Preserve Egg Dir",
          "type": "boolean"
        },
        "force_use_keys": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Force Use Keys"
        },
        "force_ignore_keys": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Force Ignore Keys"
        },
        "merge_build_host": {
          "default": false,
          "title": "Merge Build Host",
          "type": "boolean"
        },
        "missing_dso_whitelist": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Missing Dso Whitelist"
        },
        "runpath_whitelist": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Runpath Whitelist"
        },
        "error_overdepending": {
          "default": false,
          "description": "Error on overdepending",
          "title": "Error Overdepending",
          "type": "boolean"
        },
        "error_overlinking": {
          "default": false,
          "description": "Error on overlinking",
          "title": "Error Overlinking",
          "type": "boolean"
        }
      },
      "title": "Build",
      "type": "object"
    },
    "CommandTestElement": {
      "additionalProperties": false,
      "properties": {
        "script": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "default": null,
          "description": "A script to run to perform the test.",
          "title": "Script"
        },
        "extra_requirements": {
          "anyOf": [
            {
              "$ref": "#/$defs/TestElementRequires"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Additional dependencies to install before running the test."
        },
        "files": {
          "anyOf": [
            {
              "$ref": "#/$defs/TestElementFiles"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Additional files to include for the test."
        }
      },
      "title": "CommandTestElement",
      "type": "object"
    },
    "ComplexPackage": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "The recipe name, this is only used to identify the name of the recipe.",
          "title": "Name",
          "type": "string"
        },
        "version": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The version of each output, this can be overwritten per output",
          "title": "Version"
        }
      },
      "required": [
        "name"
      ],
      "title": "ComplexPackage",
      "type": "object"
    },
    "ComplexRecipe": {
      "additionalProperties": false,
      "properties": {
        "context": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Defines arbitrary key-value pairs for Jinja interpolation",
          "title": "Context"
        },
        "source": {
          "anyOf": [
            {
              "$ref": "#/$defs/UrlSource"
            },
            {
              "$ref": "#/$defs/GitSource"
            },
            {
              "$ref": "#/$defs/LocalSource"
            },
            {
              "$ref": "#/$defs/IfStatement_Union_UrlSource__GitSource__LocalSource__"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/UrlSource"
                  },
                  {
                    "$ref": "#/$defs/GitSource"
                  },
                  {
                    "$ref": "#/$defs/LocalSource"
                  },
                  {
                    "$ref": "#/$defs/IfStatement_Union_UrlSource__GitSource__LocalSource__"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The source items to be downloaded and used for the build.",
          "title": "Source"
        },
        "build": {
          "anyOf": [
            {
              "$ref": "#/$defs/Build"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Describes how the package should be build."
        },
        "about": {
          "anyOf": [
            {
              "$ref": "#/$defs/About"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A human readable description of the package information"
        },
        "extra": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An set of arbitrary values that are included in the package manifest",
          "title": "Extra"
        },
        "recipe": {
          "anyOf": [
            {
              "$ref": "#/$defs/ComplexPackage"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The package version."
        },
        "outputs": {
          "anyOf": [
            {
              "$ref": "#/$defs/Output"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Output"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "description": "A list of outputs that are generated for this recipe.",
          "title": "Outputs"
        }
      },
      "required": [
        "outputs"
      ],
      "title": "ComplexRecipe",
      "type": "object"
    },
    "DescriptionFile": {
      "additionalProperties": false,
      "properties": {
        "file": {
          "description": "Path in the source directory that contains the packages description. E.g. README.md",
          "pattern": "^[^\\\\]+$",
          "title": "File",
          "type": "string"
        }
      },
      "required": [
        "file"
      ],
      "title": "DescriptionFile",
      "type": "object"
    },
    "DownstreamTestElement": {
      "additionalProperties": false,
      "properties": {
        "downstream": {
          "description": "Install the package and use the output of this package to test if the tests in the downstream package still succeed.",
          "title": "Downstream",
          "type": "string"
        }
      },
      "required": [
        "downstream"
      ],
      "title": "DownstreamTestElement",
      "type": "object"
    },
    "GitSource": {
      "additionalProperties": false,
      "properties": {
        "patches": {
          "anyOf": [
            {
              "pattern": "^[^\\\\]+$",
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "pattern": "^[^\\\\]+$",
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "default": [],
          "description": "A list of patches to apply after fetching the source",
          "title": "Patches"
        },
        "folder": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The location in the working directory to place the source",
          "title": "Folder"
        },
        "git_rev": {
          "default": "HEAD",
          "description": "The git rev the checkout.",
          "title": "Git Rev",
          "type": "string"
        },
        "git_url": {
          "description": "The url that points to the git repository.",
          "title": "Git Url",
          "type": "string"
        },
        "git_depth": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A value to use when shallow cloning the repository.",
          "title": "Git Depth"
        }
      },
      "required": [
        "git_url"
      ],
      "title": "GitSource",
      "type": "object"
    },
    "IfStatement": {
      "properties": {
        "if": {
          "title": "If",
          "type": "string"
        },
        "then": {
          "anyOf": [
            {},
            {
              "items": {},
              "type": "array"
            }
          ],
          "title": "Then"
        },
        "else": {
          "anyOf": [
            {},
            {
              "items": {},
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Else"
        }
      },
      "required": [
        "if",
        "then"
      ],
      "title": "IfStatement",
      "type": "object"
    },
    "IfStatement_Union_CommandTestElement__ImportTestElement__DownstreamTestElement__": {
      "properties": {
        "if": {
          "title": "If",
          "type": "string"
        },
        "then": {
          "anyOf": [
            {
              "$ref": "#/$defs/CommandTestElement"
            },
            {
              "$ref": "#/$defs/ImportTestElement"
            },
            {
              "$ref": "#/$defs/DownstreamTestElement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/CommandTestElement"
                  },
                  {
                    "$ref": "#/$defs/ImportTestElement"
                  },
                  {
                    "$ref": "#/$defs/DownstreamTestElement"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "title": "Then"
        },
        "else": {
          "anyOf": [
            {
              "$ref": "#/$defs/CommandTestElement"
            },
            {
              "$ref": "#/$defs/ImportTestElement"
            },
            {
              "$ref": "#/$defs/DownstreamTestElement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/CommandTestElement"
                  },
                  {
                    "$ref": "#/$defs/ImportTestElement"
                  },
                  {
                    "$ref": "#/$defs/DownstreamTestElement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Else"
        }
      },
      "required": [
        "if",
        "then"
      ],
      "title": "IfStatement[Union[CommandTestElement, ImportTestElement, DownstreamTestElement]]",
      "type": "object"
    },
    "IfStatement_Union_UrlSource__GitSource__LocalSource__": {
      "properties": {
        "if": {
          "title": "If",
          "type": "string"
        },
        "then": {
          "anyOf": [
            {
              "$ref": "#/$defs/UrlSource"
            },
            {
              "$ref": "#/$defs/GitSource"
            },
            {
              "$ref": "#/$defs/LocalSource"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/UrlSource"
                  },
                  {
                    "$ref": "#/$defs/GitSource"
                  },
                  {
                    "$ref": "#/$defs/LocalSource"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "title": "Then"
        },
        "else": {
          "anyOf": [
            {
              "$ref": "#/$defs/UrlSource"
            },
            {
              "$ref": "#/$defs/GitSource"
            },
            {
              "$ref": "#/$defs/LocalSource"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/UrlSource"
                  },
                  {
                    "$ref": "#/$defs/GitSource"
                  },
                  {
                    "$ref": "#/$defs/LocalSource"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Else"
        }
      },
      "required": [
        "if",
        "then"
      ],
      "title": "IfStatement[Union[UrlSource, GitSource, LocalSource]]",
      "type": "object"
    },
    "ImportTestElement": {
      "additionalProperties": false,
      "properties": {
        "imports": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "description": "A list of Python imports to check after having installed the built package.",
          "title": "Imports"
        }
      },
      "required": [
        "imports"
      ],
      "title": "ImportTestElement",
      "type": "object"
    },
    "LocalSource": {
      "additionalProperties": false,
      "properties": {
        "patches": {
          "anyOf": [
            {
              "pattern": "^[^\\\\]+$",
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "pattern": "^[^\\\\]+$",
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "default": [],
          "description": "A list of patches to apply after fetching the source",
          "title": "Patches"
        },
        "folder": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The location in the working directory to place the source",
          "title": "Folder"
        },
        "path": {
          "description": "A path on the local machine that contains the source.",
          "title": "Path",
          "type": "string"
        }
      },
      "required": [
        "path"
      ],
      "title": "LocalSource",
      "type": "object"
    },
    "Output": {
      "properties": {
        "package": {
          "anyOf": [
            {
              "$ref": "#/$defs/ComplexPackage"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The package name and version, this overwrites any top-level fields."
        },
        "source": {
          "anyOf": [
            {
              "$ref": "#/$defs/UrlSource"
            },
            {
              "$ref": "#/$defs/GitSource"
            },
            {
              "$ref": "#/$defs/LocalSource"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/UrlSource"
                  },
                  {
                    "$ref": "#/$defs/GitSource"
                  },
                  {
                    "$ref": "#/$defs/LocalSource"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The source items to be downloaded and used for the build.",
          "title": "Source"
        },
        "build": {
          "anyOf": [
            {
              "$ref": "#/$defs/OutputBuild"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Describes how the package should be build."
        },
        "requirements": {
          "anyOf": [
            {
              "$ref": "#/$defs/Requirements"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The package dependencies"
        },
        "test": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/CommandTestElement"
                  },
                  {
                    "$ref": "#/$defs/ImportTestElement"
                  },
                  {
                    "$ref": "#/$defs/DownstreamTestElement"
                  },
                  {
                    "$ref": "#/$defs/IfStatement_Union_CommandTestElement__ImportTestElement__DownstreamTestElement__"
                  },
                  {
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/$defs/CommandTestElement"
                        },
                        {
                          "$ref": "#/$defs/ImportTestElement"
                        },
                        {
                          "$ref": "#/$defs/DownstreamTestElement"
                        },
                        {
                          "$ref": "#/$defs/IfStatement_Union_CommandTestElement__ImportTestElement__DownstreamTestElement__"
                        }
                      ]
                    },
                    "type": "array"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Tests to run after packaging",
          "title": "Test"
        },
        "about": {
          "anyOf": [
            {
              "$ref": "#/$defs/About"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A human readable description of the package information. The values here are merged with the top level `about` field."
        },
        "extra": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An set of arbitrary values that are included in the package manifest. The values here are merged with the top level `extras` field.",
          "title": "Extra"
        }
      },
      "title": "Output",
      "type": "object"
    },
    "OutputBuild": {
      "additionalProperties": false,
      "properties": {
        "number": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "pattern": "\\$\\{\\{.*\\}\\}",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": 0,
          "description": "Build number to version current build in addition to package version",
          "title": "Number"
        },
        "string": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Build string to identify build variant (if not explicitly set, computed automatically from used build variant)",
          "title": "String"
        },
        "skip": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "List of conditions under which to skip the build of the package.",
          "title": "Skip"
        },
        "script": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Build script to be used. If not given, tries to find 'build.sh' on Unix or 'bld.bat' on Windows inside the recipe folder.",
          "title": "Script"
        },
        "noarch": {
          "anyOf": [
            {
              "enum": [
                "generic",
                "python"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Can be either 'generic' or 'python'. A noarch 'python' package compiles .pyc files upon installation.",
          "title": "Noarch"
        },
        "entry_points": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Only valid if `noarch: python` - list of all entry points of the package. e.g. `bsdiff4 = bsdiff4.cli:main_bsdiff4`",
          "title": "Entry Points"
        },
        "run_exports": {
          "anyOf": [
            {
              "$ref": "#/$defs/RunExports"
            },
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Additional `run` dependencies added to a package that is build against this package.",
          "title": "Run Exports"
        },
        "ignore_run_exports": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Ignore specific `run` dependencies that are added by dependencies in our `host` requirements section that have`run_exports`.",
          "title": "Ignore Run Exports"
        },
        "ignore_run_exports_from": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Ignore `run_exports` from the specified dependencies in our `host` section.`",
          "title": "Ignore Run Exports From"
        },
        "track_features": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "deprecated, but still used to downweigh packages",
          "title": "Track Features"
        },
        "include_recipe": {
          "default": true,
          "description": "Whether or not to include the rendered recipe in the final package.",
          "title": "Include Recipe",
          "type": "boolean"
        },
        "pre-link": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Script to execute when installing - before linking. Highly discouraged!",
          "title": "Pre-Link"
        },
        "post-link": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Script to execute when installing - after linking.",
          "title": "Post-Link"
        },
        "pre-unlink": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Script to execute when removing - before unlinking.",
          "title": "Pre-Unlink"
        },
        "no_link": {
          "anyOf": [
            {
              "pattern": "^[^\\\\]+$",
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "pattern": "^[^\\\\]+$",
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A list of files that are included in the package but should not be installed when installing the package.",
          "title": "No Link"
        },
        "binary_relocation": {
          "anyOf": [
            {
              "const": false
            },
            {
              "pattern": "^[^\\\\]+$",
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "pattern": "^[^\\\\]+$",
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "default": [],
          "description": "A list of files that should be excluded from binary relocation or False to ignore all binary files.",
          "title": "Binary Relocation"
        },
        "has_prefix_files": {
          "anyOf": [
            {
              "pattern": "^[^\\\\]+$",
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "pattern": "^[^\\\\]+$",
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "default": [],
          "description": "A list of files to force being detected as A TEXT file for prefix replacement.",
          "title": "Has Prefix Files"
        },
        "binary_has_prefix_files": {
          "anyOf": [
            {
              "pattern": "^[^\\\\]+$",
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "pattern": "^[^\\\\]+$",
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "default": [],
          "description": "A list of files to force being detected as A BINARY file for prefix replacement.",
          "title": "Binary Has Prefix Files"
        },
        "ignore_prefix_files": {
          "anyOf": [
            {
              "const": true
            },
            {
              "pattern": "^[^\\\\]+$",
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "pattern": "^[^\\\\]+$",
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "default": [],
          "description": "A list of files that are not considered for prefix replacement, or True to ignore all files.",
          "title": "Ignore Prefix Files"
        },
        "detect_binary_files_with_prefix": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Wether to detect binary files with prefix or not. Defaults to True on Unix and False on Windows.",
          "title": "Detect Binary Files With Prefix"
        },
        "skip_compile_pyc": {
          "anyOf": [
            {
              "pattern": "^[^\\\\]+$",
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "pattern": "^[^\\\\]+$",
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A list of python files that should not be compiled to .pyc files at install time.",
          "title": "Skip Compile Pyc"
        },
        "rpaths": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "default": [
            "lib/"
          ],
          "description": "A list of rpaths (Linux only).",
          "title": "Rpaths"
        },
        "script_env": {
          "anyOf": [
            {
              "$ref": "#/$defs/ScriptEnv"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Environment variables to either pass through to the script environment or set."
        },
        "always_include_files": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "default": [],
          "description": "Files to be included even if they are present in the PREFIX before building.",
          "title": "Always Include Files"
        },
        "osx_is_app": {
          "default": false,
          "title": "Osx Is App",
          "type": "boolean"
        },
        "disable_pip": {
          "default": false,
          "title": "Disable Pip",
          "type": "boolean"
        },
        "preserve_egg_dir": {
          "default": false,
          "title": "Preserve Egg Dir",
          "type": "boolean"
        },
        "force_use_keys": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Force Use Keys"
        },
        "force_ignore_keys": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Force Ignore Keys"
        },
        "merge_build_host": {
          "default": false,
          "title": "Merge Build Host",
          "type": "boolean"
        },
        "missing_dso_whitelist": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Missing Dso Whitelist"
        },
        "runpath_whitelist": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Runpath Whitelist"
        },
        "error_overdepending": {
          "default": false,
          "description": "Error on overdepending",
          "title": "Error Overdepending",
          "type": "boolean"
        },
        "error_overlinking": {
          "default": false,
          "description": "Error on overlinking",
          "title": "Error Overlinking",
          "type": "boolean"
        },
        "cache_only": {
          "default": false,
          "description": "Do not output a package but use this output as an input to others.",
          "title": "Cache Only",
          "type": "boolean"
        },
        "cache_from": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Take the output of the specified outputs and copy them in the working directory.",
          "title": "Cache From"
        }
      },
      "title": "OutputBuild",
      "type": "object"
    },
    "Requirements": {
      "additionalProperties": false,
      "properties": {
        "build": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Dependencies to install on the build platform architecture. Compilers, CMake, everything that needs to execute at build time.",
          "title": "Build"
        },
        "host": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Dependencies to install on the host platform architecture. All the packages that your build links against.",
          "title": "Host"
        },
        "run": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Dependencies that should be installed alongside this package. Dependencies in the `host` section with `run_exports` are also automatically added here.",
          "title": "Run"
        },
        "run_constrained": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Constrained optional dependencies at runtime.",
          "title": "Run Constrained"
        }
      },
      "title": "Requirements",
      "type": "object"
    },
    "RunExports": {
      "additionalProperties": false,
      "properties": {
        "weak": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Weak run exports apply from the host env to the run env",
          "title": "Weak"
        },
        "strong": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Strong run exports apply from the build and host env to the run env",
          "title": "Strong"
        },
        "noarch": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Noarch run exports are the only ones looked at when building noarch packages",
          "title": "Noarch"
        },
        "weak_constrains": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Weak run constrains add run_constrains from the host env",
          "title": "Weak Constrains"
        },
        "strong_constrains": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Strong run constrains add run_constrains from the build and host env",
          "title": "Strong Constrains"
        }
      },
      "title": "RunExports",
      "type": "object"
    },
    "ScriptEnv": {
      "additionalProperties": false,
      "properties": {
        "passthrough": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "default": [],
          "description": "Environments variables to leak into the build environment from the host system. During build time these variables are recorded and stored in the package output. Use `secrets` for environment variables that should not be recorded.",
          "title": "Passthrough"
        },
        "env": {
          "additionalProperties": {
            "type": "string"
          },
          "default": {},
          "description": "Environment variables to set in the build environment.",
          "title": "Env",
          "type": "object"
        },
        "secrets": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "default": [],
          "description": "Environment variables to leak into the build environment from the host system that contain sensitve information. Use with care because this might make recipes no longer reproducible on other machines.",
          "title": "Secrets"
        }
      },
      "title": "ScriptEnv",
      "type": "object"
    },
    "SimplePackage": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "The package name",
          "title": "Name",
          "type": "string"
        },
        "version": {
          "description": "The package version",
          "title": "Version",
          "type": "string"
        }
      },
      "required": [
        "name",
        "version"
      ],
      "title": "SimplePackage",
      "type": "object"
    },
    "SimpleRecipe": {
      "additionalProperties": false,
      "properties": {
        "context": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Defines arbitrary key-value pairs for Jinja interpolation",
          "title": "Context"
        },
        "source": {
          "anyOf": [
            {
              "$ref": "#/$defs/UrlSource"
            },
            {
              "$ref": "#/$defs/GitSource"
            },
            {
              "$ref": "#/$defs/LocalSource"
            },
            {
              "$ref": "#/$defs/IfStatement_Union_UrlSource__GitSource__LocalSource__"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/UrlSource"
                  },
                  {
                    "$ref": "#/$defs/GitSource"
                  },
                  {
                    "$ref": "#/$defs/LocalSource"
                  },
                  {
                    "$ref": "#/$defs/IfStatement_Union_UrlSource__GitSource__LocalSource__"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The source items to be downloaded and used for the build.",
          "title": "Source"
        },
        "build": {
          "anyOf": [
            {
              "$ref": "#/$defs/Build"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Describes how the package should be build."
        },
        "about": {
          "anyOf": [
            {
              "$ref": "#/$defs/About"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A human readable description of the package information"
        },
        "extra": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An set of arbitrary values that are included in the package manifest",
          "title": "Extra"
        },
        "package": {
          "allOf": [
            {
              "$ref": "#/$defs/SimplePackage"
            }
          ],
          "description": "The package name and version."
        },
        "test": {
          "anyOf": [
            {
              "$ref": "#/$defs/CommandTestElement"
            },
            {
              "$ref": "#/$defs/ImportTestElement"
            },
            {
              "$ref": "#/$defs/DownstreamTestElement"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/CommandTestElement"
                  },
                  {
                    "$ref": "#/$defs/ImportTestElement"
                  },
                  {
                    "$ref": "#/$defs/DownstreamTestElement"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Tests to run after packaging",
          "title": "Test"
        },
        "requirements": {
          "anyOf": [
            {
              "$ref": "#/$defs/Requirements"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The package dependencies"
        }
      },
      "required": [
        "package"
      ],
      "title": "SimpleRecipe",
      "type": "object"
    },
    "TestElementFiles": {
      "additionalProperties": false,
      "properties": {
        "source": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "extra files from $SRC_DIR",
          "title": "Source"
        },
        "recipe": {
          "anyOf": [
            {
              "minLength": 1,
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "minLength": 1,
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "extra files from $RECIPE_DIR",
          "title": "Recipe"
        }
      },
      "title": "TestElementFiles",
      "type": "object"
    },
    "TestElementRequires": {
      "additionalProperties": false,
      "properties": {
        "build": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "extra requirements with build_platform architecture (emulators, ...)",
          "title": "Build"
        },
        "run": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "extra run dependencies",
          "title": "Run"
        }
      },
      "title": "TestElementRequires",
      "type": "object"
    },
    "UrlSource": {
      "additionalProperties": false,
      "properties": {
        "patches": {
          "anyOf": [
            {
              "pattern": "^[^\\\\]+$",
              "type": "string"
            },
            {
              "$ref": "#/$defs/IfStatement"
            },
            {
              "items": {
                "anyOf": [
                  {
                    "pattern": "^[^\\\\]+$",
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/IfStatement"
                  }
                ]
              },
              "type": "array"
            }
          ],
          "default": [],
          "description": "A list of patches to apply after fetching the source",
          "title": "Patches"
        },
        "folder": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The location in the working directory to place the source",
          "title": "Folder"
        },
        "url": {
          "description": "The url that points to the source. This should be an archive that is extracted in the working directory.",
          "title": "Url",
          "type": "string"
        },
        "sha256": {
          "anyOf": [
            {
              "maxLength": 64,
              "minLength": 64,
              "pattern": "[a-fA-F0-9]{64}",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The SHA256 hash of the source archive",
          "title": "Sha256"
        },
        "md5": {
          "anyOf": [
            {
              "maxLength": 32,
              "minLength": 32,
              "pattern": "[a-fA-F0-9]{32}",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The MD5 hash of the source archive",
          "title": "Md5"
        }
      },
      "required": [
        "url"
      ],
      "title": "UrlSource",
      "type": "object"
    }
  },
  "anyOf": [
    {
      "$ref": "#/$defs/SimpleRecipe"
    },
    {
      "$ref": "#/$defs/ComplexRecipe"
    }
  ]
}